{"version":3,"file":"static/js/256.b1716fa7.chunk.js","mappings":"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","sources":["components/modals/SupplierEdit.js","components/modals/SupplierView.js","components/datatables/SupplierTable.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport { putSupplier } from \"../../api\";\r\nimport { ProductContext } from \"../../context/products/ProductProvider\";\r\nimport { IoPencilSharp } from \"react-icons/io5\";\r\n\r\nfunction SupplierEdit({ data }) {\r\n  const queryClient = useQueryClient();\r\n\r\n  const { proState, proDispatch } = useContext(ProductContext);\r\n\r\n  const initialValues = {\r\n    id: data?.id,\r\n    name: data?.name,\r\n    telephone: data?.telephone,\r\n    address: data?.address,\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string().trim().required(\"Required*\"),\r\n    telephone: Yup.number().required(\"Required*\"),\r\n    address: Yup.string().required(\"Required*\"),\r\n  });\r\n\r\n  const { mutateAsync } = useMutation(\"suppliers\", putSupplier);\r\n\r\n  const onSubmit = (values, options) => {\r\n    mutateAsync(values, {\r\n      onSuccess: (data) => {\r\n        options.setSubmitting(false);\r\n        alert(\"Changes Saved\");\r\n        queryClient.setQueryData(\"suppliers\",old=>{\r\n          return [...old,data];\r\n        });\r\n        // options.resetForm();\r\n        proDispatch({ type: \"showSupplierEditModal\", payload: false });\r\n      },\r\n      onError: (error) => alert(error?.message),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={proState.showSupplierEditModal}\r\n      onHide={() =>\r\n        proDispatch({ type: \"showSupplierEditModal\", payload: false })\r\n      }\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>\r\n          <IoPencilSharp /> Edit Supplier\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n        enableReinitialize={true}\r\n      >\r\n        {({\r\n          handleChange,\r\n          handleSubmit,\r\n          errors,\r\n          isSubmitting,\r\n          touched,\r\n          values,\r\n        }) => {\r\n          return (\r\n            <Form className=\"py-4\">\r\n              <Modal.Body className=\"p-4\">\r\n                <Form.Control\r\n                  type=\"hidden\"\r\n                  name=\"id\"\r\n                  value={values.id}\r\n                  onChange={handleChange(\"id\")}\r\n                />\r\n                {/*  name */}\r\n                <Form.Group className=\"pb-3\" controlId=\"name\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Supplier Name\"\r\n                    name=\"name\"\r\n                    value={values.name}\r\n                    onChange={handleChange(\"name\")}\r\n                  />\r\n                  {touched.name && errors.name ? (\r\n                    <Form.Text className=\"text-danger\">{errors.name}</Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n\r\n                {/*  telephone */}\r\n                <Form.Group className=\"pb-3\" controlId=\"telephone\">\r\n                  <Form.Label>Telephone</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter telephone\"\r\n                    name=\"telephone\"\r\n                    value={values.telephone}\r\n                    onChange={handleChange(\"telephone\")}\r\n                    onError={(e) => alert(e)}\r\n                  />\r\n                  {touched.telephone && errors.telephone ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      {errors.telephone}\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n\r\n                {/*  address */}\r\n                <Form.Group className=\"pb-3\" controlId=\"address\">\r\n                  <Form.Label>address</Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    placeholder=\"Enter address\"\r\n                    name=\"address\"\r\n                    value={values.address}\r\n                    onChange={handleChange(\"address\")}\r\n                  />\r\n                  {touched.address && errors.address ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      {errors.address}\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n              </Modal.Body>\r\n\r\n              <Modal.Footer>\r\n                <Button\r\n                  style={{ background: \"#e2ad0e\", borderColor: \"#e2ad0e\" }}\r\n                  variant=\"dark\"\r\n                  type=\"submit\"\r\n                  onClick={handleSubmit}\r\n                  disabled={isSubmitting}\r\n                >\r\n                  {isSubmitting ? (\r\n                    <>\r\n                      <span>Please Wait... </span>\r\n                      <span className=\"spinner-border spinner-border-sm\"></span>\r\n                    </>\r\n                  ) : (\r\n                    \"Save Changes\"\r\n                  )}\r\n                </Button>\r\n                <Button\r\n                  variant=\"light\"\r\n                  onClick={() =>\r\n                    proDispatch({\r\n                      type: \"showSupplierEditModal\",\r\n                      payload: false,\r\n                    })\r\n                  }\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default SupplierEdit;\r\n","import { Modal } from \"react-bootstrap\";\r\n\r\nfunction SupplierView({ supplier, setSuppViewData }) {\r\n  return (\r\n    <Modal\r\n      as=\"div\"\r\n      keyboard\r\n      animation\r\n      show={supplier.visible}\r\n      onHide={(prev) =>\r\n        setSuppViewData({\r\n          ...prev,\r\n          visible: false,\r\n        })\r\n      }\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title> supplier Details</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p className=\"fw-bold text-primary\">Name </p>\r\n        <p className=\"lead\">{supplier.name}</p>\r\n        <p className=\"fw-bold text-primary\">Address </p>\r\n        <p className=\"lead\">{supplier.address}</p>\r\n        <p className=\"fw-bold text-primary\">Telephone </p>\r\n        <p className=\"lead\">{supplier.telephone}</p>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default SupplierView;\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport $ from \"jquery\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\r\nimport { IoAdd } from \"react-icons/io5\";\r\nimport { deleteSupplier, getAllSuppliers } from \"../../api\";\r\nimport { ProductContext } from \"../../context/products/ProductProvider\";\r\nimport SupplierEdit from \"../modals/SupplierEdit\";\r\nimport { supplierColumns } from \"../../data/columns\";\r\nimport SupplierView from \"../modals/SupplierView\";\r\n\r\nfunction SupplierTable() {\r\n  const tableRef = useRef(null);\r\n  const { proDispatch } = useContext(ProductContext);\r\n  const [supplierData, setSupplierData] = useState({});\r\n  const [suppViewData, setSuppViewData] = useState({\r\n    visible: false,\r\n    name: \"\",\r\n    address: \"\",\r\n    telephone: \"\",\r\n  });\r\n\r\n  const queryClient = useQueryClient();\r\n  const data = useQuery(\"suppliers\", getAllSuppliers);\r\n\r\n  const { mutateAsync } = useMutation(deleteSupplier, {\r\n    onMutate: (id) => {\r\n      queryClient.invalidateQueries(\"suppliers\");\r\n      const data = queryClient.getQueryData(\"suppliers\");\r\n\r\n      queryClient.setQueryData(\"suppliers\", (prv) => {\r\n        return prv.filter((supplier) => supplier.id !== id);\r\n      });\r\n      return data;\r\n    },\r\n    onSuccess: () => {\r\n      alert(\"data deleted\");\r\n    },\r\n    onError: (_error, _data, context) => {\r\n      queryClient.setQueryData(context.data);\r\n    },\r\n    onSettled: () => {\r\n      queryClient.invalidateQueries(\"suppliers\");\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleView = (rowData) => {\r\n      setSuppViewData({\r\n        visible: true,\r\n        name: rowData.name,\r\n        address: rowData.address,\r\n        telephone: rowData.telephone,\r\n      });\r\n    };\r\n    const handleEdit = (rowData) => {\r\n      setSupplierData(rowData);\r\n      proDispatch({ type: \"showSupplierEditModal\", payload: true });\r\n    };\r\n    const handleDelete = (id) => {\r\n      mutateAsync(id);\r\n    };\r\n\r\n    $(`#${tableRef.current.id}`).DataTable({\r\n      scrollY: 400,\r\n      scrollX: true,\r\n      scrollCollapse: true,\r\n      fixedHeader: true,\r\n      bInfo: false,\r\n      scrollResize: true,\r\n      destroy: true,\r\n      responsive: true,\r\n      data: data ? data.data : [],\r\n      columns: supplierColumns(handleView, handleEdit, handleDelete),\r\n    });\r\n  }, [data, proDispatch, mutateAsync]);\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"shadow\">\r\n        <Card.Header className=\"text-primary d-flex justify-content-end\">\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() =>\r\n              proDispatch({ type: \"showSupplierAddModal\", payload: true })\r\n            }\r\n          >\r\n            <IoAdd /> Add Supplier\r\n          </Button>\r\n        </Card.Header>\r\n        <Card.Body className=\"p-4\">\r\n          <table\r\n            width={\"100%\"}\r\n            className=\"table table-sm table-responsive table-hover table bordered \"\r\n            id=\"supplier-table\"\r\n            ref={tableRef}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Name</th>\r\n                <th>Address</th>\r\n                <th>Telephone</th>\r\n                <th>Action</th>\r\n              </tr>\r\n              {/* <tr>\r\n                <th style={{ width: \"10%\" }}>Id</th>\r\n                <th style={{ width: \"25%\" }}>Name</th>\r\n                <th>Address</th>\r\n                <th style={{ width: \"15%\" }}>Telephone</th>\r\n                <th>Action</th>\r\n              </tr> */}\r\n            </thead>\r\n\r\n            <tbody></tbody>\r\n          </table>\r\n        </Card.Body>\r\n      </Card>\r\n      <SupplierView supplier={suppViewData} setSuppViewData={setSuppViewData} />\r\n      <SupplierEdit data={supplierData} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SupplierTable;\r\n"],"names":["_ref","data","queryClient","useQueryClient","_useContext","useContext","ProductContext","proState","proDispatch","initialValues","id","name","telephone","address","validationSchema","Yup","shape","trim","required","mutateAsync","useMutation","putSupplier","_jsxs","Modal","show","showSupplierEditModal","onHide","type","payload","children","_jsx","IoPencilSharp","Formik","onSubmit","values","options","onSuccess","setSubmitting","alert","setQueryData","old","concat","_toConsumableArray","onError","error","message","enableReinitialize","_ref2","handleChange","handleSubmit","errors","isSubmitting","touched","Form","className","value","onChange","controlId","placeholder","e","as","rows","Button","style","background","borderColor","variant","onClick","disabled","_Fragment","supplier","setSuppViewData","keyboard","animation","visible","prev","_objectSpread","closeButton","tableRef","useRef","_useState","useState","_useState2","_slicedToArray","supplierData","setSupplierData","_useState3","_useState4","suppViewData","useQuery","getAllSuppliers","deleteSupplier","onMutate","invalidateQueries","getQueryData","prv","filter","_error","_data","context","onSettled","useEffect","$","current","DataTable","scrollY","scrollX","scrollCollapse","fixedHeader","bInfo","scrollResize","destroy","responsive","columns","supplierColumns","rowData","Card","IoAdd","width","ref","SupplierView","SupplierEdit"],"sourceRoot":""}